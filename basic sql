-- SIMPLE QUERYING (aka CALLING SOME/ALL COLUMNS IN THE DATASET)

/* geting the dataset, all columns */
SELECT *
FROM tutorial.us_housing_units

/* if you want to select only year, month, and west columns: */
SELECT year, month, west
FROM tutorial.us_housing_units

/* renaming columns */
SELECT west AS "West Region",
        south AS "South Region",
        midwest AS "Midwest Region",
        northeast AS "Northeast Region"
FROM tutorial.us_housing_units

/* performing arithmetic operation  to create a new column and immediately calling it: */
SELECT year, 
      month, 
      south, 
      west,
      midwest,
      northeast,
      south + west + midwest + northeast AS sum_of_all_regions
FROM tutorial.us_housing_units

-- FILTERING

/* selecting only months whose month's name starts with letter before or equal to 'N' */
SELECT *
FROM tutorial.us_housing_units
WHERE month_name <= 'N'

/* selecting all columns for observations where units in West is bigger than Midwest and Northeast combined */
SELECT *
FROM tutorial.us_housing_units
WHERE midwest + northeast < west

/* WITH LIKE (case sensitive) AND ILIKE (not case sensitive) QUERY */

-- selecting only those that contains Snoop
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group_name" LIKE 'Snoop%'

-- selecting only those that contains Snoop, but not case sensitive
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group_name" ILIKE 'Snoop%'

-- the % is a wildcard, it's like telling SQL to give you all that starts with Snoop (bcs you put the % in the back)
-- if you want to make sure that SQL gives you everything that contains Snoop, either starts with Snoop or not, use %Snoop%

-- SORTING

/* use ORDER BY query. you can use several columns to order the dataset. 
   here we are ordering by 'year' column first, in a descending way. then order by 'year_rank' column */
SELECT *
FROM tutorial.billboard_top_100_year_end
ORDER BY year DESC, year_rank
